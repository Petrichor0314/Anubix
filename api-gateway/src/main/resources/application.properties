spring.application.name=api-gateway
management.endpoints.web.exposure.include=mappings,health,info,prometheus
management.endpoint.prometheus.enabled=true
management.endpoints.web.base-path=/actuator
spring.main.web-application-type=reactive

# Server Port
server.port=${SERVER_PORT:8080}

# Load Balancer Settings
loadbalancer.port=${SERVER_PORT:8080}
loadbalancer.algorithm=${LOADBALANCER_ALGORITHM:round-robin}
loadbalancer.retries=${LOADBALANCER_RETRIES:3}
loadbalancer.retry-delay=${LOADBALANCER_RETRY_DELAY:1000}

# Health Check Settings
loadbalancer.healthcheck.enabled=${HEALTHCHECK_ENABLED:true}
loadbalancer.healthcheck.interval=${HEALTHCHECK_INTERVAL:5000}
loadbalancer.healthcheck.path=${HEALTHCHECK_PATH:/health}
loadbalancer.healthcheck.retries=${HEALTHCHECK_RETRIES:3}
loadbalancer.healthcheck.retry-delay=${HEALTHCHECK_RETRY_DELAY:1000}
loadbalancer.healthcheck.timeout=${HEALTHCHECK_TIMEOUT:2}

#R4J
resilience4j.circuitbreaker.instances.healthCheckCB.register-health-indicator=true
resilience4j.circuitbreaker.instances.healthCheckCB.sliding-window-size=10
resilience4j.circuitbreaker.instances.healthCheckCB.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.healthCheckCB.wait-duration-in-open-state=5000
resilience4j.circuitbreaker.instances.healthCheckCB.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.healthCheckCB.minimum-number-of-calls=5

eureka.client.register-with-eureka=false
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=http://discovery-server:8761/eureka/





