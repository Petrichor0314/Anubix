version: "3.8"

services:
  feature-service:
    build:
      context: .
      dockerfile: feature-service/Dockerfile
    environment:
      SERVER_NAME: feature-service
      SERVER_PORT: 8080
    expose:
      - "8080"
    networks:
      - monitoring

  toggle-service:
    build:
      context: .
      dockerfile: toggle-service/Dockerfile
    environment:
      SERVER_NAME: toggle-service
      SERVER_PORT: 8080
    expose:
      - "8080"
    networks:
      - monitoring

  analytics-service:
    build:
      context: .
      dockerfile: analytics-service/Dockerfile
    environment:
      SERVER_NAME: analytics-service
      SERVER_PORT: 8080
    expose:
      - "8080"
    networks:
      - monitoring

  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    container_name: api-gateway
    depends_on:
      - feature-service
      - toggle-service
      - analytics-service
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    environment:
      SERVER_PORT: ${SERVER_PORT}
      LOADBALANCER_ALGORITHM: ${LOADBALANCER_ALGORITHM}
      LOADBALANCER_RETRIES: ${LOADBALANCER_RETRIES}
      LOADBALANCER_RETRY_DELAY: ${LOADBALANCER_RETRY_DELAY}
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - monitoring

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - monitoring

  discovery-server:
    build:
      context: .
      dockerfile: discovery-server/Dockerfile
    container_name: discovery-server
    ports:
      - "8761:8761"
    networks:
      - monitoring

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - monitoring

  auth_service:
    build:
      context: .
      dockerfile: auth_service/Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATA_MONGODB_URI: mongodb://mongo:27017/authdb
      # Add any JWT secret or other env vars here
    depends_on:
      - mongo
      - discovery-server
    expose:
      - "8080"
    networks:
      - monitoring

  mongo:
    image: mongo:latest
    container_name: mongo
    expose:
      - "27017"
    networks:
      - monitoring

networks:
  monitoring:
